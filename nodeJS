Get API for students
-------------------------------------------------------------------------------------------------------------------
app.get('/api/students', (req, res) => {
    const year = req.headers['year'];
    const className = req.headers['class'];
    const section = req.headers['section'];

    // Check if any of the required headers are missing
    if (!year || !className || !section) {
        return res.status(400).json({
            message: "Missing required headers. Please provide 'year', 'class', and 'section'."
        });
    }

    // Check if year, class, and section have valid data types (you can add more validation if needed)
    if (isNaN(year) || isNaN(className) || !section.trim()) {
        return res.status(400).json({
            message: "Invalid header values. 'year' and 'class' should be numbers, and 'section' cannot be empty."
        });
    }

    console.log(`Year: ${year}, Class: ${className}, Section: ${section}`);

    // Use parameterized queries to avoid SQL injection
    const query = `
        SELECT s.name 
        FROM students s 
        JOIN students_records sc ON s.id = sc.student_id 
        WHERE sc.year = ? AND sc.class = ? AND sc.section = ?
    `;

    db.query(query, [year, className, section], (err, results) => {
        if (err) {
            console.error(err);
            return res.status(500).json({ message: 'Server error' });
        }

        // Check if no results were found
        if (results.length === 0) {
            return res.status(404).json({ message: 'No students found for the given year, class, and section.' });
        }

        // Return the list of students if found
        return res.status(200).json({ Students: results });
    });
});
